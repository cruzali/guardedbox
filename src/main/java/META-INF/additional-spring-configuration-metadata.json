{
    "properties": [
        {
            "name": "environment",
            "type": "java.lang.String",
            "description": "Indicates if environment is 'dev' or 'pro'. For instance, in 'dev' environment, OTP is not checked."
        },
        {
            "name": "server.internal-http-port",
            "type": "int",
            "description": "Internal (behind balancer) http port, typically 8080."
        },
        {
            "name": "server.internal-https-port",
            "type": "int",
            "description": "Internal (behind balancer) https port, typically 8443."
        },
        {
            "name": "server.external-http-port",
            "type": "int",
            "description": "External (public IP) http port, typically 80."
        },
        {
            "name": "server.external-https-port",
            "type": "int",
            "description": "External (public IP) https port, typically 443."
        },
        {
            "name": "server.external-url",
            "type": "java.lang.String",
            "description": "External (public IP) URL."
        },
        {
            "name": "server.ssl.ecdh-curves",
            "type": "java.lang.String",
            "description": "TLS ECDH offered curves."
        },
        {
            "name": "server.ssl.enable-ocsp-stapling",
            "type": "boolean",
            "description": "Enable TLS OCSP stapling."
        },
        {
            "name": "server.strict-transport-security-header",
            "type": "java.lang.String",
            "description": "Value for the Strict-Transport-Security header."
        },
        {
            "name": "server.expect-ct-header",
            "type": "java.lang.String",
            "description": "Value for the Expect-CT header."
        },
        {
            "name": "server.content-security-policy-header",
            "type": "java.lang.String",
            "description": "Value for the Content-Security-Policy header."
        },
        {
            "name": "server.cache-control-cacheable-header",
            "type": "java.lang.String",
            "description": "Value for the Cache-Control header for cacheable responses."
        },
        {
            "name": "server.cache-control-non-cacheable-header",
            "type": "java.lang.String",
            "description": "Value for the Cache-Control header for non-cacheable responses."
        },
        {
            "name": "server.frame-options-header",
            "type": "java.lang.String",
            "description": "Value for the X-Frame-Options header."
        },
        {
            "name": "server.xss-protection-header",
            "type": "java.lang.String",
            "description": "Value for the X-XSS-Protection header."
        },
        {
            "name": "server.content-type-options-header",
            "type": "java.lang.String",
            "description": "Value for the X-Content-Type-Options header."
        },
        {
            "name": "server.referrer-policy-header",
            "type": "java.lang.String",
            "description": "Value for the Referrer-Policy header."
        },
        {
            "name": "server.feature-policy-header",
            "type": "java.lang.String",
            "description": "Value for the Feature-Policy header."
        },
        {
            "name": "server.servlet.session.cookie.value-base64",
            "type": "boolean",
            "description": "Set if the Base64 encoding of session cookie value should be used. This is valuable inorder to support RFC 6265 whichrecommends using Base 64 encoding to the cookie value."
        },
        {
            "name": "server.servlet.session.cookie.same-site",
            "type": "java.lang.String",
            "description": "Set the value for the SameSite session cookie directive. The default value is Lax."
        },
        {
            "name": "spring.mail.from",
            "type": "java.lang.String",
            "description": "From field of the sent emails."
        },
        {
            "name": "spring.mail.bcc",
            "type": "java.lang.String",
            "description": "BCC field of the sent emails."
        },
        {
            "name": "security-parameters.registration-ttl",
            "type": "long",
            "description": "Security Parameter: Time to live of a registration before it expires."
        },
        {
            "name": "security-parameters.registration-min-ttl",
            "type": "long",
            "description": "Security Parameter: Minimum time to live of a registration before another one can be requested for the same email."
        },
        {
            "name": "security-parameters.invitation-ttl",
            "type": "long",
            "description": "Security Parameter: Time to live of an invitation before it expires."
        },
        {
            "name": "security-parameters.registration-execution-time",
            "type": "long",
            "description": "Security Parameter: RegistrationsController.createRegistration method execution time."
        },
        {
            "name": "security-parameters.login-salt-execution-time",
            "type": "long",
            "description": "Security Parameter: AccountsController.getAccountLoginSalt method execution time."
        },
        {
            "name": "security-parameters.challenge-length",
            "type": "int",
            "description": "Security Parameter: Challenge length (number of bytes)."
        },
        {
            "name": "security-parameters.challenge-ttl",
            "type": "long",
            "description": "Security Parameter: Time to live of a challenge before it expires."
        },
        {
            "name": "security-parameters.challenge-execution-time",
            "type": "long",
            "description": "Security Parameter: SessionController.getChallenge method execution time."
        },
        {
            "name": "security-parameters.otp-length",
            "type": "int",
            "description": "Security Parameter: One time password length (number of alphanumeric characters)."
        },
        {
            "name": "security-parameters.otp-ttl",
            "type": "long",
            "description": "Security Parameter: Time to live of a One Time Password (OTP) before it expires."
        },
        {
            "name": "security-parameters.otp-max-valid-otps",
            "type": "long",
            "description": "Security Parameter: Maximum number of valid One Time Passwords (OTPs) in session while performing a login."
        },
        {
            "name": "security-parameters.otp-execution-time",
            "type": "long",
            "description": "Security Parameter: SessionController.obtainOtp method execution time."
        },
        {
            "name": "security-parameters.login-execution-time",
            "type": "long",
            "description": "Security Parameter: SessionController.login method execution time."
        },
        {
            "name": "cryptography.cryptography-length",
            "type": "int",
            "description": "General length (number of bytes) of the used cryptography (public keys, salts, etc.)"
        },
        {
            "name": "cryptography.signature-algorithm",
            "type": "java.lang.String",
            "description": "Signature algorithm."
        },
        {
            "name": "cryptography.bcrypt-rounds",
            "type": "int",
            "description": "Bcrypt rounds."
        },
        {
            "name": "keys.hidden-derivation",
            "type": "java.util.Map<java.lang.Integer,java.lang.String>",
            "description": "Map of secret keys (base64) used to create hidden derivations by length (number of bytes)."
        },
        {
            "name": "i18n.supported-languages",
            "type": "java.util.List",
            "description": "List of supported languages."
        },
        {
            "name": "i18n.default-language",
            "type": "java.lang.String",
            "description": "Default language."
        },
        {
            "name": "emails.registration-subject",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of subjects of the registration email by language."
        },
        {
            "name": "emails.registration-body",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of bodies of the registration email by language."
        },
        {
            "name": "emails.invitation-subject",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of subjects of the invitation email by language."
        },
        {
            "name": "emails.invitation-body",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of bodies of the invitation email by language."
        },
        {
            "name": "emails.registration-complete-subject",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of subjects of the registration complete email by language."
        },
        {
            "name": "emails.registration-complete-body",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of bodies of the registration complete email by language."
        },
        {
            "name": "emails.invitation-complete-subject",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of subjects of the invitation complete email by language."
        },
        {
            "name": "emails.invitation-complete-body",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of bodies of the invitation complete email by language."
        },
        {
            "name": "emails.already-registered-subject",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of subjects of the already registered email by language."
        },
        {
            "name": "emails.already-registered-body",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of bodies of the already registered email by language."
        },
        {
            "name": "emails.otp-subject",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of subjects of the OTP email by language."
        },
        {
            "name": "emails.otp-body",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of bodies of the OTP email by language."
        },
        {
            "name": "emails.otp-incorrect-subject",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of subjects of the incorrect OTP email by language."
        },
        {
            "name": "emails.otp-incorrect-body",
            "type": "java.util.Map<java.lang.String,java.lang.String>",
            "description": "Map of bodies of the incorrect OTP email by language."
        }
    ]
}
